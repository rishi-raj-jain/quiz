---
import "@fontsource/inter";
import "~/styles/index.css";

const { site } = Astro;
const {
  title = "Quiz",
  description = "A bridge for your systems.",
  image = new URL("social.jpg", site),
} = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" href="/favicon.ico" sizes="any" />
<link rel="icon" href="/favicon.svg" type="image/svg+xml" />

<title>{title === "Quiz" ? title : `${title} | Quiz`}</title>
<meta name="description" content={description} />

<!-- social media -->
<meta
  property="og:title"
  content={title === "Quiz" ? title : `${title} | Quiz`}
/>
<meta property="og:type" content="website" />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
<meta property="og:url" content={site} />
<meta name="twitter:card" content="summary_large_image" />

<!-- initialize theme -->
<script is:inline>
  const themeSaved = localStorage.getItem("theme");

  if (themeSaved) {
    document.documentElement.dataset.theme = themeSaved;
  } else {
    const prefersDark = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
  }

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => {
      if (!localStorage.getItem("theme")) {
        document.documentElement.dataset.theme = event.matches
          ? "dark"
          : "light";
      }
    });
</script>

<script is:inline defer>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      console.log(entry);
      if (entry.isIntersecting) entry.target.classList.add("show");
      else entry.target.classList.remove("show");
    });
  });

  const hiddenElements = document.querySelectorAll(".hide");
  hiddenElements.forEach((element) => observer.observe(element));
</script>
